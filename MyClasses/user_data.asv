% User_Data_Class


% Open Data File

[file, path] = uigetfile('', 'Select Raw Data file');

filePath = strcat(

fid = fopen('GazePoint User Data\Test Subject 1\result\User 0_all_gaze.csv');

% Write data from data file to dataSet
if fid == -1
    
    disp('Error, unable to open data file, check extension');
    
else
    
    dataSet = textscan(fid, '%s', 'Delimiter', '\r');
    dataSet = dataSet{1};
    fclose(fid);
    
end

% Open fixation file

[file, path] = uigetfile('', 'Select fixation Data file');


fid = fopen('GazePoint User Data\Test Subject 1\result\User 0_fixations.csv');

% Write data from data file to dataSet
if fid == -1
    
    disp('Error, unable to open fixattion file, check extension');
    
else
    
    sumFixation = textscan(fid, '%s', 'Delimiter', '\r');
    sumFixation = sumFixation{1};
    fclose(fid);

end

% Build cell array
dataSize = numel(dataSet);
numFixation = numel(sumFixation);

% Base Data
Time = zeros(dataSize, 1);
FPOGX = zeros(dataSize, 1);
FPOGY = zeros(dataSize, 1);
FPOGS = zeros(dataSize, 1);
FPOGD = zeros(dataSize, 1);
FPOGID = zeros(dataSize, 1);
FPOGV = zeros(dataSize, 1);

% First Cue
Object_1.xMin = zeros(dataSize, 1);
Object_1.xMax = zeros(dataSize, 1);
Object_1.yMin = zeros(dataSize, 1);
Object_1.yMax = zeros(dataSize, 1);

% Second Cue
Object_2.xMin = zeros(dataSize, 1);
Object_2.xMax = zeros(dataSize, 1);
Object_2.yMin = zeros(dataSize, 1);
Object_2.yMax = zeros(dataSize, 1);

% Distal Cue
Distal.xMin = zeros(dataSize, 1);
Distal.xMax = zeros(dataSize, 1);
Distal.yMin = zeros(dataSize, 1);
Distal.yMax = zeros(dataSize, 1);

% Fixation IDs
fixation.ID = zeros(numFixation, 1);
fixation.duration = zeros(numFixation, 1);
fixation.start = zeros(numFixation, 1);
fixation.end = zeros(numFixation, 1);

%-----------------------------Fixation parsring---------------------------%
% Parse fixation ID table, skip headers
for i = 2:numFixation
   
    % Split data columns by delimiter ',', csv file
    fixationEntry = split(sumFixation(i), ',');
    fixationEntry = fixationEntry.';
    
    % Build fixation struct
    fixation.ID(i) =  str2double(fixationEntry(8));
    fixation.duration(i) = str2double(fixationEntry(7));
    
end

%-----------------------------Raw Data parsring---------------------------%

tag = 'X MIN'; % Tag used to track data entries

id = 1;

% Parse fixation all gazes table, skip headers
for j =2:dataSize
    
    % Split data columns by delimiter ',', csv file
     rowEntry = split(dataSet(j), ',');
     rowEntry = rowEntry.';
     
     % Raw Data
    Time(j) = str2double(rowEntry(3));
    FPOGX(j) = str2double(rowEntry(4));
    FPOGY(j) = str2double(rowEntry(5));
    FPOGS(j) = str2double(rowEntry(6));
    FPOGD(j) = str2double(rowEntry(7));
    FPOGID(j) = str2double(rowEntry(8));
    FPOGV(j) = str2double(rowEntry(9));

    % Fixation time stamps
    
    if fixation.ID(id) ~= FPOGID(j)
        
        % Search for ID entry number

        for k = 1:numFixation

            if (fixation.ID(k) == FPOGID(j))
                id = k;
                break;
            end

        end
    
    end
    
    % Ensure the first entry is the first fixation from fixation data sheet
    if  FPOGID(j) >= fixation.ID(1)
        
        % Initialize start value
        if fixation.start(id) == 0

            fixation.start(id) = j;

        else

            % Update end value
            fixation.end(id) = j;

        end

    end
    
    
    % First Cue
    if strcmp(tag, rowEntry{10})
        
        Object_1.xMin(j) = str2double(rowEntry(11));
        Object_1.xMax(j) = str2double(rowEntry(13));
        Object_1.yMin(j) = str2double(rowEntry(15));
        Object_1.yMax(j) = str2double(rowEntry(17));
    
    end

    % Second Cue
      if numel(rowEntry) > 18 && strcmp(tag', rowEntry{18})
        
        Object_2.xMin(j) = str2double(rowEntry(19));
        Object_2.xMax(j) = str2double(rowEntry(21));
        Object_2.yMin(j) = str2double(rowEntry(23));
        Object_2.yMax(j) = str2double(rowEntry(25));
    
      end

    % Distal Cue
      if numel(rowEntry) > 26 && strcmp(tag, rowEntry{26})
          
        Distal.xMin(j) = str2double(rowEntry(27));
        Distal.xMax(j) = str2double(rowEntry(29));
        Distal.yMin(j) = str2double(rowEntry(31));
        Distal.yMax(j) = str2double(rowEntry(33));
    
      end
     

end

